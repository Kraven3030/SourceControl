id: format_api_response
type: datasource
subtype: JavascriptQuery
resourceName: JavascriptQuery
template:
  ordered:
    - queryRefreshTime: ''
    - allowedGroupIds: []
    - streamResponse: false
    - lastReceivedFromResourceAt: null
    - queryDisabledMessage: ''
    - servedFromCache: false
    - offlineUserQueryInputs: ''
    - successMessage: ''
    - queryDisabled: ''
    - playgroundQuerySaveId: latest
    - workflowParams: null
    - resourceNameOverride: ''
    - runWhenModelUpdates: false
    - workflowRunId: null
    - showFailureToaster: true
    - query: >-
        const return_data = response.data.message;

        let temp_array = return_data.split(',\r\n');

        let response_body = temp_array.join(',');

        let code = '"responseCode"';

        let cappex_status = '"status"';

        let commission = '"commission"';


        function get_data(search_for) {
          let temp_string = search_for;
          for(i=0;i<temp_array.length;i++){
              if (temp_array[i].search(search_for) !== -1) {
              temp_string = temp_array[i]
              temp_string = temp_string.split(': ');
              temp_string = temp_string[1];
            }
          }
          temp_string = temp_string.replaceAll('"', '');
          return temp_string;
        }


        code = get_data(code);

        cappex_status = get_data(cappex_status);

        commission = get_data(commission);


        if (code === 'responseCode') {
          code = Number(-1);
        }


        if (cappex_status === 'Accepted') {
          code = 0;
        }


        if (cappex_status === 'status') {
          cappex_status = 'No Status Given'
        }


        if (commission === 'commission' || isNaN(commission)) {
          commission = null;
        } else {
         commission = Number(commission).toFixed(2);
        }


        return {cappex_status: cappex_status, code: code, response_body:
        response_body, commission: commission}
    - playgroundQueryUuid: ''
    - playgroundQueryId: null
    - error: null
    - workflowRunBodyType: raw
    - privateParams: []
    - runWhenPageLoadsDelay: ''
    - data: null
    - importedQueryInputs:
        ordered: []
    - _additionalScope: []
    - isImported: false
    - showSuccessToaster: true
    - cacheKeyTtl: ''
    - requestSentTimestamp: null
    - metadata: null
    - workflowActionType: null
    - queryRunTime: null
    - changesetObject: ''
    - errorTransformer: >-
        // The variable 'data' allows you to reference the request's data in the
        transformer. 

        // example: return data.find(element => element.isError)

        return data.error
    - finished: null
    - confirmationMessage: null
    - isFetching: false
    - changeset: ''
    - rawData: null
    - queryTriggerDelay: '0'
    - resourceTypeOverride: null
    - watchedParams: []
    - enableErrorTransformer: false
    - showLatestVersionUpdatedWarning: false
    - timestamp: 0
    - evalType: script
    - importedQueryDefaults:
        ordered: []
    - enableTransformer: false
    - showUpdateSetValueDynamicallyToggle: true
    - overrideOrgCacheForUserCache: false
    - runWhenPageLoads: false
    - transformer: |-
        // Query results are available as the `data` variable
        return formatDataAsArray(data)
    - events: []
    - queryTimeout: '120000'
    - workflowId: null
    - requireConfirmation: false
    - queryFailureConditions: ''
    - changesetIsObject: false
    - enableCaching: false
    - allowedGroups: []
    - workflowBlockPluginId: null
    - offlineQueryType: None
    - queryThrottleTime: '750'
    - updateSetValueDynamically: false
    - notificationDuration: ''
createdAt: 2023-11-14T14:55:53.501Z
blockData:
  top: 352
  left: 48
  uuid: ec5d1ef9-9b15-43c9-8438-9b3efc836426
  options:
    parameters:
      - id: 22861054-8d1e-4b03-a0ce-e2c2866ea251
        name: response
        exampleValue: '{}'
  pluginId: format_api_response
  blockType: function
  editorType: JavascriptQuery
  resourceName: JavascriptQuery
  incomingOnSuccessEdges: []
