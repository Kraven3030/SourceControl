id: query2
type: datasource
subtype: JavascriptQuery
resourceName: JavascriptQuery
template:
  ordered:
    - queryRefreshTime: ''
    - allowedGroupIds: []
    - streamResponse: false
    - lastReceivedFromResourceAt: null
    - queryDisabledMessage: ''
    - servedFromCache: false
    - offlineUserQueryInputs: ''
    - successMessage: ''
    - queryDisabled: ''
    - playgroundQuerySaveId: latest
    - workflowParams: null
    - resourceNameOverride: ''
    - runWhenModelUpdates: false
    - workflowRunId: null
    - showFailureToaster: true
    - query: >-
        console.log('triggered loop');

        const results = [];

        let data = startTrigger.data;

        for (i=0;i<data.length;i++) {
          const result = call_api(data[i]);
          results.push(result);
        }


        async function call_api(d){

        let response = '';

        let format_insert = '';

        const results = [];


        response = await cappex_api_call(d);

        format_insert = await format_api_response(response);


        results.push({response: response, format_insert: format_insert, value:
        d});


        return results;

        }


        return await Promise.all(results);
    - playgroundQueryUuid: ''
    - playgroundQueryId: null
    - error: null
    - workflowRunBodyType: raw
    - privateParams: []
    - runWhenPageLoadsDelay: ''
    - data: null
    - importedQueryInputs:
        ordered: []
    - _additionalScope: []
    - isImported: false
    - showSuccessToaster: true
    - cacheKeyTtl: ''
    - requestSentTimestamp: null
    - metadata: null
    - workflowActionType: null
    - editorMode: sql
    - queryRunTime: null
    - changesetObject: ''
    - errorTransformer: >-
        // The variable 'data' allows you to reference the request's data in the
        transformer. 

        // example: return data.find(element => element.isError)

        return data.error
    - finished: null
    - confirmationMessage: null
    - isFetching: false
    - changeset: ''
    - rawData: null
    - queryTriggerDelay: '0'
    - resourceTypeOverride: null
    - watchedParams: []
    - enableErrorTransformer: false
    - showLatestVersionUpdatedWarning: false
    - timestamp: 0
    - evalType: script
    - importedQueryDefaults:
        ordered: []
    - enableTransformer: false
    - showUpdateSetValueDynamicallyToggle: true
    - overrideOrgCacheForUserCache: false
    - runWhenPageLoads: false
    - transformer: |-
        // Query results are available as the `data` variable
        return formatDataAsArray(data)
    - events: []
    - queryTimeout: '10000'
    - workflowId: null
    - requireConfirmation: false
    - queryFailureConditions: ''
    - changesetIsObject: false
    - enableCaching: false
    - allowedGroups: []
    - workflowBlockPluginId: null
    - offlineQueryType: None
    - queryThrottleTime: '750'
    - updateSetValueDynamically: false
    - notificationDuration: ''
createdAt: 2023-11-14T19:26:49.698Z
blockData:
  top: 32
  left: 544
  uuid: f3174e22-91b1-47af-b9f3-efaaa5ce2572
  pluginId: query2
  blockType: code
  dimensions:
    width: 394
    height: 569
  editorType: JavascriptQuery
  resourceName: JavascriptQuery
  outgoingPorts:
    - id: c8e42f3f-aaee-492f-afdd-04e69d934b9b
      name: onError-f3174e22-91b1-47af-b9f3-efaaa5ce2572
      type: onError
  retryPanelOpen: false
  responsePanelState: open
  incomingOnSuccessEdges:
    - cb0c6592-d645-4eb4-9ab6-42a09dcfba6a
